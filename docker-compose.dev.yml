version: '3.8'

services:
  # Kafka + Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9093,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_HOURS: 168  # 7 days
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

  # Kafka UI for debugging
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9093
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

  # FBL Parser Worker (Python FastAPI)
  fbl-worker:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    volumes:
      - ./parsers:/app/parsers
      - ./workers:/app/workers
    ports:
      - "8001:8001"
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9093
      - LOG_LEVEL=DEBUG
      - SENTRY_DSN=${SENTRY_DSN:-}
    command: uvicorn workers.fbl_worker:app --host 0.0.0.0 --port 8001 --reload

  # Bento FBL Pipeline
  bento-fbl:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    depends_on:
      - kafka
      - fbl-worker
    volumes:
      - ./bento:/app/bento
      - ./parsers:/app/parsers
      - ./workers:/app/workers
    ports:
      - "4195:4195"  # Bento metrics endpoint
    environment:
      PIPELINE: fbl
      KAFKA_INPUT_TOPIC: smtp_input
      KAFKA_OUTPUT_TOPIC: fbl-events
      KAFKA_BOOTSTRAP_SERVERS: kafka:9093
      KAFKA_GROUP_ID: inbound-parsers-fbl-dev
      WORKER_URL: http://fbl-worker:8001
      LOG_LEVEL: DEBUG

  # Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - grafana-data:/var/lib/grafana

  # Loki for logs
  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./monitoring/loki/loki-config.yml:/etc/loki/local-config.yaml
      - loki-data:/loki

  # Promtail for log shipping
  promtail:
    image: grafana/promtail:latest
    depends_on:
      - loki
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./monitoring/loki/promtail-config.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml

volumes:
  prometheus-data:
  grafana-data:
  loki-data:

networks:
  default:
    name: inbound-parsers-dev
